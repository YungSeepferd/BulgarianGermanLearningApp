class CulturalContextToggle{constructor(e={}){this.container=e.container||document.body,this.storageKey="bgde:cultural_context_settings",this.settings=this.loadSettings(),this.defaultSettings={showEtymology:!0,showCulturalNotes:!0,showLinguisticNotes:!0,showExamples:!0,contextLevel:"adaptive"},this.settings={...this.defaultSettings,...this.settings},this.initialized=!1}init(){if(this.initialized)return;this.createToggleUI(),this.bindEvents(),this.applySettings(),this.initialized=!0,this.dispatchEvent("cultural-context-initialized",{settings:this.settings})}createToggleUI(){const e=document.createElement("div");e.className="cultural-context-toggle",e.innerHTML=`
            <div class="context-toggle-header">
                <button class="context-toggle-btn" id="context-toggle-btn" aria-expanded="false">
                    <span class="toggle-icon">üåç</span>
                    <span class="toggle-text">Cultural Context</span>
                    <span class="toggle-arrow">‚ñº</span>
                </button>
            </div>
            
            <div class="context-settings-panel" id="context-settings-panel" hidden>
                <div class="context-setting-group">
                    <h4>Context Level</h4>
                    <div class="context-level-options">
                        <label class="context-option">
                            <input type="radio" name="contextLevel" value="minimal">
                            <span>Minimal</span>
                            <small>Essential info only</small>
                        </label>
                        <label class="context-option">
                            <input type="radio" name="contextLevel" value="standard">
                            <span>Standard</span>
                            <small>Balanced context</small>
                        </label>
                        <label class="context-option">
                            <input type="radio" name="contextLevel" value="detailed">
                            <span>Detailed</span>
                            <small>Full cultural context</small>
                        </label>
                        <label class="context-option">
                            <input type="radio" name="contextLevel" value="adaptive">
                            <span>Adaptive</span>
                            <small>Based on your level</small>
                        </label>
                    </div>
                </div>
                
                <div class="context-setting-group">
                    <h4>Show Context Types</h4>
                    <div class="context-type-toggles">
                        <label class="context-checkbox">
                            <input type="checkbox" id="show-etymology" ${this.settings.showEtymology?"checked":""}>
                            <span>Etymology</span>
                            <small>Word origins and history</small>
                        </label>
                        <label class="context-checkbox">
                            <input type="checkbox" id="show-cultural-notes" ${this.settings.showCulturalNotes?"checked":""}>
                            <span>Cultural Notes</span>
                            <small>Cultural usage and context</small>
                        </label>
                        <label class="context-checkbox">
                            <input type="checkbox" id="show-linguistic-notes" ${this.settings.showLinguisticNotes?"checked":""}>
                            <span>Linguistic Notes</span>
                            <small>Grammar and usage tips</small>
                        </label>
                        <label class="context-checkbox">
                            <input type="checkbox" id="show-examples" ${this.settings.showExamples?"checked":""}>
                            <span>Examples</span>
                            <small>Usage examples in context</small>
                        </label>
                    </div>
                </div>
                
                <div class="context-actions">
                    <button class="btn-secondary" id="reset-context-settings">Reset to Default</button>
                    <button class="btn-primary" id="apply-context-settings">Apply Settings</button>
                </div>
            </div>
        `,this.container.firstChild?this.container.insertBefore(e,this.container.firstChild):this.container.appendChild(e);const t=e.querySelector(`input[name="contextLevel"][value="${this.settings.contextLevel}"]`);t&&(t.checked=!0)}bindEvents(){const e=document.getElementById("context-toggle-btn"),t=document.getElementById("context-settings-panel"),n=document.getElementById("apply-context-settings"),s=document.getElementById("reset-context-settings");e.addEventListener("click",()=>{const s=e.getAttribute("aria-expanded")==="true",n=!s;e.setAttribute("aria-expanded",n),t.hidden=!n;const o=e.querySelector(".toggle-arrow");o.textContent=n?"‚ñ≤":"‚ñº"}),n.addEventListener("click",()=>{this.updateSettingsFromUI(),this.applySettings(),this.saveSettings(),e.click(),this.dispatchEvent("cultural-context-changed",{settings:this.settings})}),s.addEventListener("click",()=>{this.settings={...this.defaultSettings},this.updateUIFromSettings(),this.applySettings(),this.saveSettings(),this.dispatchEvent("cultural-context-reset",{settings:this.settings})}),document.addEventListener("click",n=>{const s=document.querySelector(".cultural-context-toggle");s&&!s.contains(n.target)&&(t.hidden||e.click())}),document.addEventListener("vocab-cards-rendered",()=>{this.applySettings()})}updateSettingsFromUI(){const e=document.querySelector('input[name="contextLevel"]:checked');e&&(this.settings.contextLevel=e.value),this.settings.showEtymology=document.getElementById("show-etymology").checked,this.settings.showCulturalNotes=document.getElementById("show-cultural-notes").checked,this.settings.showLinguisticNotes=document.getElementById("show-linguistic-notes").checked,this.settings.showExamples=document.getElementById("show-examples").checked}updateUIFromSettings(){const e=document.querySelector(`input[name="contextLevel"][value="${this.settings.contextLevel}"]`);e&&(e.checked=!0),document.getElementById("show-etymology").checked=this.settings.showEtymology,document.getElementById("show-cultural-notes").checked=this.settings.showCulturalNotes,document.getElementById("show-linguistic-notes").checked=this.settings.showLinguisticNotes,document.getElementById("show-examples").checked=this.settings.showExamples}applySettings(){const e=document.querySelectorAll(".enhanced-vocab-card");e.forEach(e=>{this.applySettingsToCard(e)}),document.documentElement.style.setProperty("--context-level",this.getContextLevelValue())}applySettingsToCard(e){const n=localStorage.getItem("bgde:user_level")||"A1",s=e.dataset.level||"A1",t=this.shouldShowContextForLevel(n,s);this.toggleCardSection(e,".etymology-section",this.settings.showEtymology&&t),this.toggleCardSection(e,".cultural-note-section",this.settings.showCulturalNotes&&t),this.toggleCardSection(e,".linguistic-note-section",this.settings.showLinguisticNotes&&t),this.toggleCardSection(e,".examples-section",this.settings.showExamples&&t),e.classList.remove("context-minimal","context-standard","context-detailed","context-adaptive"),e.classList.add(`context-${this.settings.contextLevel}`)}toggleCardSection(e,t,n){const s=e.querySelector(t);s&&(s.style.display=n?"":"none",s.setAttribute("aria-hidden",!n))}shouldShowContextForLevel(e,t){if(this.settings.contextLevel!=="adaptive")return this.settings.contextLevel!=="minimal";const n=["A1","A2","B1","B2","C1","C2"],s=n.indexOf(e),o=n.indexOf(t);return o>s||o===s&&this.settings.contextLevel!=="minimal"}getContextLevelValue(){const e={minimal:1,standard:2,detailed:3,adaptive:2};return e[this.settings.contextLevel]||2}loadSettings(){try{const e=localStorage.getItem(this.storageKey);return e?JSON.parse(e):{}}catch(e){return console.warn("Failed to load cultural context settings:",e),{}}}saveSettings(){try{localStorage.setItem(this.storageKey,JSON.stringify(this.settings))}catch(e){console.warn("Failed to save cultural context settings:",e)}}getSettings(){return{...this.settings}}updateSettings(e){this.settings={...this.settings,...e},this.updateUIFromSettings(),this.applySettings(),this.saveSettings(),this.dispatchEvent("cultural-context-changed",{settings:this.settings})}dispatchEvent(e,t){const n=new CustomEvent(e,{detail:t,bubbles:!0});document.dispatchEvent(n)}destroy(){const e=document.querySelector(".cultural-context-toggle");e&&e.remove(),this.initialized=!1}}typeof module!="undefined"&&module.exports&&(module.exports=CulturalContextToggle),typeof window!="undefined"&&(window.CulturalContextToggle=CulturalContextToggle)