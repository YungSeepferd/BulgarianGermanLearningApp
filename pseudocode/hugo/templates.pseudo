# Hugo Template System Pseudocode for Bulgarian-German Learning App

## Hugo Layout Templates

CLASS HugoLayoutTemplates
    """
    Defines the HTML template structure for different page types in Hugo
    """
    
    METHODS:
        base_layout() -> String
            """
            Base template that all other templates extend
            """
            RETURN """
            <!DOCTYPE html>
            <html lang="{{ .Site.Language.Lang }}">
            <head>
                <meta charset="utf-8">
                <meta name="viewport" content="width=device-width, initial-scale=1">
                <title>{{ block "title" . }}{{ .Site.Title }}{{ end }}</title>
                <meta name="description" content="{{ block "description" . }}{{ .Site.Params.description }}{{ end }}">
                
                {{ $style := resources.Get "scss/main.scss" | resources.ToCSS | resources.Minify }}
                <link rel="stylesheet" href="{{ $style.RelPermalink }}">
                
                {{ if .Site.Params.enablePWA }}
                <link rel="manifest" href="/manifest.json">
                <meta name="theme-color" content="#4a6fa5">
                {{ end }}
            </head>
            <body>
                {{ partial "header.html" . }}
                
                <main>
                    {{ block "main" . }}{{ end }}
                </main>
                
                {{ partial "footer.html" . }}
                
                {{ $js := resources.Get "js/app.js" | resources.Minify }}
                <script src="{{ $js.RelPermalink }}"></script>
                
                {{ block "scripts" . }}{{ end }}
            </body>
            </html>
            """
            
        vocabulary_list_template() -> String
            """
            Template for vocabulary listing page
            """
            RETURN """
            {{ define "title" }}Vocabulary - {{ .Site.Title }}{{ end }}
            {{ define "main" }}
            
            <div class="vocabulary-container">
                <div class="filters">
                    <select id="level-filter">
                        <option value="">All Levels</option>
                        {{ range .Site.Data.levels }}
                        <option value="{{ .code }}">{{ .name }}</option>
                        {{ end }}
                    </select>
                    
                    <select id="category-filter">
                        <option value="">All Categories</option>
                        {{ range .Site.Data.categories }}
                        <option value="{{ .slug }}">{{ .name }}</option>
                        {{ end }}
                    </select>
                    
                    <input type="text" id="search-input" placeholder="Search vocabulary...">
                </div>
                
                <div class="vocabulary-grid" id="vocabulary-grid">
                    {{ range .Site.Data.vocabulary }}
                    <div class="vocab-card" 
                         data-level="{{ .level }}" 
                         data-category="{{ .category }}"
                         data-word="{{ .word | lower }}"
                         data-translation="{{ .translation | lower }}">
                        
                        <div class="vocab-word">{{ .word }}</div>
                        <div class="vocab-translation">{{ .translation }}</div>
                        
                        {{ if .audio }}
                        <button class="audio-btn" data-audio="{{ .audio }}">
                            <span class="audio-icon">ðŸ”Š</span>
                        </button>
                        {{ end }}
                        
                        <div class="vocab-meta">
                            <span class="level-badge level-{{ .level | lower }}">{{ .level }}</span>
                            <span class="category-tag">{{ .category }}</span>
                        </div>
                        
                        {{ if .notes }}
                        <div class="vocab-notes">{{ .notes }}</div>
                        {{ end }}
                    </div>
                    {{ end }}
                </div>
            </div>
            
            {{ end }}
            
            {{ define "scripts" }}
            <script>
                // Initialize vocabulary filtering and search
                const vocabularyApp = new VocabularyApp({
                    data: {{ .Site.Data.vocabulary | jsonify }},
                    container: '#vocabulary-grid'
                });
                vocabularyApp.init();
            </script>
            {{ end }}
            """
            
        grammar_list_template() -> String
            """
            Template for grammar rules listing page
            """
            RETURN """
            {{ define "title" }}Grammar - {{ .Site.Title }}{{ end }}
            {{ define "main" }}
            
            <div class="grammar-container">
                <div class="grammar-filters">
                    <select id="grammar-level-filter">
                        <option value="">All Levels</option>
                        {{ range .Site.Data.levels }}
                        <option value="{{ .code }}">{{ .name }}</option>
                        {{ end }}
                    </select>
                </div>
                
                <div class="grammar-list">
                    {{ range .Site.Data.grammar }}
                    <article class="grammar-item" data-level="{{ .level }}">
                        <header class="grammar-header">
                            <h2>{{ .title }}</h2>
                            <span class="level-badge level-{{ .level | lower }}">{{ .level }}</span>
                        </header>
                        
                        <div class="grammar-description">
                            {{ .description | markdownify }}
                        </div>
                        
                        {{ if .examples }}
                        <div class="grammar-examples">
                            <h3>Examples:</h3>
                            <ul>
                                {{ range .examples }}
                                <li>{{ . }}</li>
                                {{ end }}
                            </ul>
                        </div>
                        {{ end }}
                        
                        {{ if .exercises }}
                        <div class="grammar-exercises">
                            <button class="start-exercise-btn" data-grammar-id="{{ .id }}">
                                Practice This Rule
                            </button>
                        </div>
                        {{ end }}
                    </article>
                    {{ end }}
                </div>
            </div>
            
            {{ end }}
            {{ end }}
            """
            
        practice_session_template() -> String
            """
            Template for practice session page
            """
            RETURN """
            {{ define "title" }}Practice Session - {{ .Site.Title }}{{ end }}
            {{ define "main" }}
            
            <div class="practice-container">
                <div class="practice-header">
                    <div class="session-stats">
                        <span class="stat">
                            <span class="stat-label">Progress:</span>
                            <span class="stat-value" id="progress">0/0</span>
                        </span>
                        <span class="stat">
                            <span class="stat-label">Accuracy:</span>
                            <span class="stat-value" id="accuracy">0%</span>
                        </span>
                        <span class="stat">
                            <span class="stat-label">Time:</span>
                            <span class="stat-value" id="session-time">00:00</span>
                        </span>
                    </div>
                    
                    <button id="end-session" class="btn-secondary">End Session</button>
                </div>
                
                <div class="flashcard-container">
                    <div class="flashcard" id="flashcard">
                        <div class="flashcard-inner">
                            <div class="flashcard-front">
                                <div class="card-content">
                                    <div class="word" id="current-word"></div>
                                    <div class="word-meta">
                                        <span class="level-badge" id="word-level"></span>
                                        <span class="category-tag" id="word-category"></span>
                                    </div>
                                </div>
                                
                                {{ if .Site.Params.enableAudio }}
                                <button class="audio-btn" id="play-audio">
                                    <span class="audio-icon">ðŸ”Š</span>
                                </button>
                                {{ end }}
                            </div>
                            
                            <div class="flashcard-back">
                                <div class="card-content">
                                    <div class="translation" id="current-translation"></div>
                                    <div class="notes" id="current-notes"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="flashcard-controls">
                        <button id="show-answer" class="btn-primary">Show Answer</button>
                        
                        <div class="response-buttons hidden" id="response-buttons">
                            <button id="incorrect-btn" class="btn-incorrect">
                                <span class="icon">âœ—</span>
                                <span class="text">Incorrect</span>
                            </button>
                            <button id="correct-btn" class="btn-correct">
                                <span class="icon">âœ“</span>
                                <span class="text">Correct</span>
                            </button>
                        </div>
                    </div>
                </div>
                
                <div class="session-complete hidden" id="session-complete">
                    <div class="completion-stats">
                        <h2>Session Complete!</h2>
                        <div class="final-stats">
                            <div class="stat-item">
                                <span class="stat-number" id="final-correct">0</span>
                                <span class="stat-label">Correct</span>
                            </div>
                            <div class="stat-item">
                                <span class="stat-number" id="final-total">0</span>
                                <span class="stat-label">Total</span>
                            </div>
                            <div class="stat-item">
                                <span class="stat-number" id="final-accuracy">0%</span>
                                <span class="stat-label">Accuracy</span>
                            </div>
                        </div>
                        
                        <div class="session-actions">
                            <button id="new-session" class="btn-primary">New Session</button>
                            <a href="/vocabulary/" class="btn-secondary">Browse Vocabulary</a>
                        </div>
                    </div>
                </div>
            </div>
            
            {{ end }}
            
            {{ define "scripts" }}
            <script>
                // Initialize practice session
                const practiceSession = new PracticeSession({
                    vocabulary: {{ .Site.Data.vocabulary | jsonify }},
                    enableAudio: {{ .Site.Params.enableAudio | default false }},
                    sessionLength: {{ .Site.Params.defaultSessionLength | default 20 }}
                });
                
                // Start session when page loads
                document.addEventListener('DOMContentLoaded', function() {
                    practiceSession.init();
                });
            </script>
            {{ end }}
            """

## Hugo Partial Templates

CLASS HugoPartialTemplates
    """
    Reusable template components
    """
    
    METHODS:
        header_partial() -> String
            """
            Site header with navigation
            """
            RETURN """
            <header class="site-header">
                <nav class="main-nav">
                    <div class="nav-brand">
                        <a href="/" class="brand-link">
                            <span class="brand-text">{{ .Site.Title }}</span>
                        </a>
                    </div>
                    
                    <div class="nav-menu">
                        <a href="/vocabulary/" class="nav-link {{ if eq .Section "vocabulary" }}active{{ end }}">
                            Vocabulary
                        </a>
                        <a href="/grammar/" class="nav-link {{ if eq .Section "grammar" }}active{{ end }}">
                            Grammar
                        </a>
                        <a href="/practice/" class="nav-link {{ if eq .Section "practice" }}active{{ end }}">
                            Practice
                        </a>
                        
                        {{ if .Site.Params.enableProgress }}
                        <a href="/progress/" class="nav-link {{ if eq .Section "progress" }}active{{ end }}">
                            Progress
                        </a>
                        {{ end }}
                    </div>
                    
                    <div class="nav-actions">
                        <button id="theme-toggle" class="theme-toggle" aria-label="Toggle dark mode">
                            <span class="theme-icon">ðŸŒ™</span>
                        </button>
                    </div>
                </nav>
            </header>
            """
            
        footer_partial() -> String
            """
            Site footer
            """
            RETURN """
            <footer class="site-footer">
                <div class="footer-content">
                    <div class="footer-section">
                        <h3>{{ .Site.Title }}</h3>
                        <p>{{ .Site.Params.description }}</p>
                    </div>
                    
                    <div class="footer-section">
                        <h4>Learn</h4>
                        <ul>
                            <li><a href="/vocabulary/">Vocabulary</a></li>
                            <li><a href="/grammar/">Grammar</a></li>
                            <li><a href="/practice/">Practice</a></li>
                        </ul>
                    </div>
                    
                    <div class="footer-section">
                        <h4>About</h4>
                        <ul>
                            <li><a href="/about/">About This App</a></li>
                            <li><a href="/methodology/">Learning Method</a></li>
                            {{ if .Site.Params.githubRepo }}
                            <li><a href="{{ .Site.Params.githubRepo }}" target="_blank">Source Code</a></li>
                            {{ end }}
                        </ul>
                    </div>
                </div>
                
                <div class="footer-bottom">
                    <p>&copy; {{ now.Year }} {{ .Site.Title }}. Built with Hugo.</p>
                </div>
            </footer>
            """
            
        search_partial() -> String
            """
            Search functionality partial
            """
            RETURN """
            <div class="search-container" id="search-container">
                <div class="search-input-wrapper">
                    <input type="text" 
                           id="search-input" 
                           placeholder="Search vocabulary and grammar..."
                           autocomplete="off">
                    <button id="search-clear" class="search-clear hidden">Ã—</button>
                </div>
                
                <div class="search-results hidden" id="search-results">
                    <div class="search-results-header">
                        <span class="results-count" id="results-count">0 results</span>
                    </div>
                    <div class="search-results-list" id="results-list"></div>
                </div>
            </div>
            
            <script>
                // Initialize search functionality
                const searchIndex = {{ .Site.Data.searchIndex | jsonify }};
                const searchApp = new SearchApp(searchIndex);
                searchApp.init();
            </script>
            """

## Hugo Shortcodes

CLASS HugoShortcodes
    """
    Custom shortcodes for enhanced content
    """
    
    METHODS:
        vocabulary_card_shortcode() -> String
            """
            Shortcode for embedding vocabulary cards in content
            Usage: {{< vocab-card word="Ð·Ð´Ñ€Ð°Ð²ÐµÐ¹" translation="hello" level="A1" >}}
            """
            RETURN """
            <div class="vocab-card-shortcode" 
                 data-word="{{ .Get "word" }}" 
                 data-translation="{{ .Get "translation" }}">
                <div class="vocab-word">{{ .Get "word" }}</div>
                <div class="vocab-translation">{{ .Get "translation" }}</div>
                
                {{ if .Get "level" }}
                <span class="level-badge level-{{ .Get "level" | lower }}">{{ .Get "level" }}</span>
                {{ end }}
                
                {{ if .Get "audio" }}
                <button class="audio-btn" data-audio="{{ .Get "audio" }}">ðŸ”Š</button>
                {{ end }}
            </div>
            """
            
        grammar_example_shortcode() -> String
            """
            Shortcode for grammar examples
            Usage: {{< grammar-example bulgarian="Ð¢Ð¾Ð¹ Ðµ ÑƒÑ‡Ð¸Ñ‚ÐµÐ»." german="Er ist Lehrer." >}}
            """
            RETURN """
            <div class="grammar-example">
                <div class="example-bulgarian">{{ .Get "bulgarian" }}</div>
                <div class="example-german">{{ .Get "german" }}</div>
                
                {{ if .Get "note" }}
                <div class="example-note">{{ .Get "note" }}</div>
                {{ end }}
            </div>
            """
            
        practice_widget_shortcode() -> String
            """
            Shortcode for embedding practice widgets
            Usage: {{< practice-widget type="vocabulary" category="verbs" count="10" >}}
            """
            RETURN """
            <div class="practice-widget" 
                 data-type="{{ .Get "type" | default "vocabulary" }}"
                 data-category="{{ .Get "category" }}"
                 data-count="{{ .Get "count" | default "5" }}">
                
                <div class="widget-header">
                    <h3>Quick Practice</h3>
                    <span class="widget-meta">
                        {{ .Get "count" | default "5" }} items from {{ .Get "category" }}
                    </span>
                </div>
                
                <button class="start-practice-btn" onclick="startQuickPractice(this)">
                    Start Practice
                </button>
            </div>
            """

## Hugo Data Templates

CLASS HugoDataTemplates
    """
    Templates for generating JSON data files from Hugo data
    """
    
    METHODS:
        search_index_template() -> String
            """
            Generate search index JSON
            """
            RETURN """
            {
                "vocabulary": [
                    {{ range $index, $item := .Site.Data.vocabulary }}
                    {{ if $index }},{{ end }}
                    {
                        "id": "{{ $item.word | urlize }}",
                        "word": {{ $item.word | jsonify }},
                        "translation": {{ $item.translation | jsonify }},
                        "category": {{ $item.category | jsonify }},
                        "level": {{ $item.level | jsonify }},
                        "url": "/vocabulary/#{{ $item.word | urlize }}"
                    }
                    {{ end }}
                ],
                "grammar": [
                    {{ range $index, $item := .Site.Data.grammar }}
                    {{ if $index }},{{ end }}
                    {
                        "id": "{{ $item.title | urlize }}",
                        "title": {{ $item.title | jsonify }},
                        "description": {{ $item.description | jsonify }},
                        "level": {{ $item.level | jsonify }},
                        "url": "/grammar/#{{ $item.title | urlize }}"
                    }
                    {{ end }}
                ]
            }
            """
            
        manifest_template() -> String
            """
            Generate PWA manifest.json
            """
            RETURN """
            {
                "name": "{{ .Site.Title }}",
                "short_name": "{{ .Site.Params.shortName | default .Site.Title }}",
                "description": "{{ .Site.Params.description }}",
                "start_url": "/",
                "display": "standalone",
                "background_color": "{{ .Site.Params.themeColor | default "#ffffff" }}",
                "theme_color": "{{ .Site.Params.themeColor | default "#4a6fa5" }}",
                "icons": [
                    {
                        "src": "/icons/icon-192x192.png",
                        "sizes": "192x192",
                        "type": "image/png"
                    },
                    {
                        "src": "/icons/icon-512x512.png",
                        "sizes": "512x512",
                        "type": "image/png"
                    }
                ]
            }
            """
