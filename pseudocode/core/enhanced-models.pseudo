# Enhanced Go Data Models for Bidirectional Bulgarian-German Learning App

# Enhanced VocabularyItem with bidirectional support and cultural context
STRUCT VocabularyItem {
    # Core identification
    ID           string   `json:"id"`
    Word         string   `json:"word"`
    Translation  string   `json:"translation"`
    
    # Learning direction and context
    SourceLang   string   `json:"source_lang"`     # "bg" or "de"
    TargetLang   string   `json:"target_lang"`     # "de" or "bg"
    Level        string   `json:"level"`           # "A1", "A2", etc.
    Category     string   `json:"category"`
    
    # Cultural and linguistic context
    Etymology    string   `json:"etymology,omitempty"`        # Word origin and history
    CulturalNote string   `json:"cultural_note,omitempty"`    # Cultural usage context
    LinguisticNote string `json:"linguistic_note,omitempty"`  # Grammar/pronunciation notes
    
    # Bidirectional learning support
    ReverseTranslation string   `json:"reverse_translation,omitempty"` # For reverse direction
    Cognates          []string `json:"cognates,omitempty"`            # Related words in both languages
    FalseFriends      []string `json:"false_friends,omitempty"`       # Words to avoid confusion
    
    # Enhanced metadata
    Difficulty    int      `json:"difficulty"`      # 1-5 scale within level
    Frequency     int      `json:"frequency"`       # Usage frequency ranking
    Audio         string   `json:"audio,omitempty"`
    Tags          []string `json:"tags,omitempty"`
    Examples      []Example `json:"examples,omitempty"`
    
    # Hugo-specific fields
    Slug          string   `json:"slug,omitempty"`
    Weight        int      `json:"weight,omitempty"`
}

# Example sentences with context
STRUCT Example {
    Sentence      string `json:"sentence"`
    Translation   string `json:"translation"`
    Context       string `json:"context,omitempty"`      # Formal/informal/regional
    AudioFile     string `json:"audio_file,omitempty"`
}

# Enhanced ReviewState with language direction tracking
STRUCT ReviewState {
    ItemID        string    `json:"item_id"`
    LearningMode  string    `json:"learning_mode"`    # "bg_to_de", "de_to_bg", "both"
    SourceLang    string    `json:"source_lang"`      # Current learning direction
    TargetLang    string    `json:"target_lang"`
    
    # SM-2 algorithm data
    Interval      int       `json:"interval"`
    EaseFactor    float64   `json:"ease_factor"`
    Repetitions   int       `json:"repetitions"`
    NextReview    time.Time `json:"next_review"`
    LastReview    time.Time `json:"last_review"`
    
    # Performance tracking per direction
    CorrectStreak int       `json:"correct_streak"`
    TotalReviews  int       `json:"total_reviews"`
    SuccessRate   float64   `json:"success_rate"`
}

# Language learning session configuration
STRUCT LearningSession {
    UserID          string    `json:"user_id"`
    SessionID       string    `json:"session_id"`
    LearningMode    string    `json:"learning_mode"`    # "bg_to_de", "de_to_bg", "mixed"
    TargetLevel     string    `json:"target_level"`     # "A1", "A2"
    Categories      []string  `json:"categories"`       # Filter by categories
    MaxItems        int       `json:"max_items"`        # Session length
    ShowCulturalNotes bool    `json:"show_cultural_notes"`
    StartTime       time.Time `json:"start_time"`
    EndTime         time.Time `json:"end_time,omitempty"`
}

# User preferences for bidirectional learning
STRUCT UserPreferences {
    UserID              string   `json:"user_id"`
    NativeLanguage      string   `json:"native_language"`     # "bg" or "de"
    PreferredDirection  string   `json:"preferred_direction"` # "bg_to_de", "de_to_bg", "both"
    CurrentLevel        string   `json:"current_level"`       # "A1", "A2"
    ShowEtymology       bool     `json:"show_etymology"`
    ShowCulturalNotes   bool     `json:"show_cultural_notes"`
    AudioEnabled        bool     `json:"audio_enabled"`
    PreferredCategories []string `json:"preferred_categories"`
    DifficultyPreference string  `json:"difficulty_preference"` # "easier", "mixed", "challenging"
}

# Enhanced search entry with language direction
STRUCT SearchEntry {
    ID          string `json:"id"`
    Title       string `json:"title"`
    Content     string `json:"content"`
    Category    string `json:"category,omitempty"`
    Level       string `json:"level"`
    SourceLang  string `json:"source_lang"`
    TargetLang  string `json:"target_lang"`
    URL         string `json:"url"`
    Type        string `json:"type"`
    Difficulty  int    `json:"difficulty"`
}

# Language direction toggle state
STRUCT LanguageToggle {
    CurrentMode    string `json:"current_mode"`     # "bg_to_de", "de_to_bg"
    AvailableModes []string `json:"available_modes"`
    LastChanged    time.Time `json:"last_changed"`
}
